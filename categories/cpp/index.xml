<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>CPP on 后端技术小屋</title><link>https://backendhouse.github.io/categories/cpp/</link><description>Recent content in CPP on 后端技术小屋</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 28 Jan 2021 19:12:57 +0800</lastBuildDate><atom:link href="https://backendhouse.github.io/categories/cpp/index.xml" rel="self" type="application/rss+xml"/><item><title>STL源码分析--functional</title><link>https://backendhouse.github.io/post/stl%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-functional/</link><pubDate>Thu, 28 Jan 2021 19:12:57 +0800</pubDate><guid>https://backendhouse.github.io/post/stl%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-functional/</guid><description>往期回顾(更多精彩内容，请关注微信公众号：后端技术小屋) STL源码分析&amp;ndash;内存分配器 STL源码分析&amp;ndash;vector STL</description></item><item><title>STL源码分析--algorithm</title><link>https://backendhouse.github.io/post/stl%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-algorithm/</link><pubDate>Thu, 28 Jan 2021 19:09:49 +0800</pubDate><guid>https://backendhouse.github.io/post/stl%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-algorithm/</guid><description>往期回顾(更多精彩内容，请关注微信公众号：后端技术小屋) STL源码分析&amp;ndash;内存分配器 STL源码分析&amp;ndash;vector STL</description></item><item><title>STL源码分析--bitset</title><link>https://backendhouse.github.io/post/stl%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-bitset/</link><pubDate>Thu, 28 Jan 2021 19:08:36 +0800</pubDate><guid>https://backendhouse.github.io/post/stl%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-bitset/</guid><description>往期回顾(更多精彩内容，请关注微信公众号：后端技术小屋) STL源码分析&amp;ndash;内存分配器 STL源码分析&amp;ndash;vector STL</description></item><item><title>STL源码分析--rbtree</title><link>https://backendhouse.github.io/post/stl%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-rbtree/</link><pubDate>Thu, 28 Jan 2021 19:05:48 +0800</pubDate><guid>https://backendhouse.github.io/post/stl%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-rbtree/</guid><description>往期回顾(更多精彩内容，请关注微信公众号：后端技术小屋) STL源码分析&amp;ndash;内存分配器 STL源码分析&amp;ndash;vector STL</description></item><item><title>STL源码分析--traits</title><link>https://backendhouse.github.io/post/stl%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-traits/</link><pubDate>Thu, 28 Jan 2021 19:03:12 +0800</pubDate><guid>https://backendhouse.github.io/post/stl%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-traits/</guid><description>往期回顾(更多精彩内容，请关注微信公众号：悟空者说) STL源码分析&amp;ndash;内存分配器 STL源码分析&amp;ndash;vector STL源码</description></item><item><title>STL源码分析--iterator</title><link>https://backendhouse.github.io/post/stl%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-iterator/</link><pubDate>Thu, 28 Jan 2021 19:00:45 +0800</pubDate><guid>https://backendhouse.github.io/post/stl%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-iterator/</guid><description>往期回顾(更多精彩内容，请专注微信公众号：悟空者说) STL源码分析&amp;ndash;内存分配器 STL源码分析&amp;ndash;vector STL源码</description></item><item><title>STL源码分析--deque</title><link>https://backendhouse.github.io/post/stl%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-deque/</link><pubDate>Thu, 28 Jan 2021 18:55:36 +0800</pubDate><guid>https://backendhouse.github.io/post/stl%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-deque/</guid><description>往期回顾 STL源码分析&amp;ndash;内存分配器 STL源码分析&amp;ndash;vector STL源码分析&amp;ndash;string STL源码分析</description></item><item><title>STL源码分析--list</title><link>https://backendhouse.github.io/post/stl%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-list/</link><pubDate>Thu, 28 Jan 2021 18:47:18 +0800</pubDate><guid>https://backendhouse.github.io/post/stl%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-list/</guid><description>往期回顾 STL源码分析&amp;ndash;内存分配器 STL源码分析&amp;ndash;vector STL源码分析&amp;ndash;string 1 相关文件 list list.h</description></item><item><title>STL源码分析--string</title><link>https://backendhouse.github.io/post/stl%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-string/</link><pubDate>Thu, 28 Jan 2021 18:44:25 +0800</pubDate><guid>https://backendhouse.github.io/post/stl%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-string/</guid><description>1 string的数据结构 从定义可知, string其实是base_string的特化类，string使用默认的内存分配器__STL_DEFAU</description></item><item><title>STL源码分析--vector</title><link>https://backendhouse.github.io/post/stl%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-vector/</link><pubDate>Wed, 27 Jan 2021 23:51:24 +0800</pubDate><guid>https://backendhouse.github.io/post/stl%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-vector/</guid><description>1 相关头文件 stl_vector.h vector.h vector 2 内存分配 vector默认使用__default_alloc_template分配内存，该分配器是线程安全的，具体可见ST</description></item><item><title>STL源码分析--内存分配</title><link>https://backendhouse.github.io/post/stl%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D/</link><pubDate>Wed, 27 Jan 2021 19:27:00 +0800</pubDate><guid>https://backendhouse.github.io/post/stl%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D/</guid><description>说明：STL采用SGI版本， 下载地址 1 相关头文件 stl_alloc.h alloc.h 2 allocator STL中默认使用的内存分配器，被广泛用于vector, hashmap, deque等数据结构中 该类实</description></item></channel></rss>