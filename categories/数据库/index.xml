<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>数据库 on 后端技术小屋</title><link>https://backendhouse.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/</link><description>Recent content in 数据库 on 后端技术小屋</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 20 May 2025 18:24:05 +0800</lastBuildDate><atom:link href="https://backendhouse.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/index.xml" rel="self" type="application/rss+xml"/><item><title>Apache Arrow String Vector Memory Layout优化总结</title><link>https://backendhouse.github.io/post/apache-arrow-string-vector-memory-layout%E4%BC%98%E5%8C%96%E6%80%BB%E7%BB%93/</link><pubDate>Tue, 20 May 2025 18:24:05 +0800</pubDate><guid>https://backendhouse.github.io/post/apache-arrow-string-vector-memory-layout%E4%BC%98%E5%8C%96%E6%80%BB%E7%BB%93/</guid><description>Apache Arrow String Vector Memory Layout优化总结 https://docs.google.com/document/d/12aZi8Inez9L_JCtZ6gi</description></item><item><title>Boltdb学习笔记之三--事务与并发控制</title><link>https://backendhouse.github.io/post/boltdb%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E4%B8%89-%E4%BA%8B%E5%8A%A1%E4%B8%8E%E5%B9%B6%E5%8F%91%E6%8E%A7%E5%88%B6/</link><pubDate>Thu, 15 Apr 2021 09:24:05 +0800</pubDate><guid>https://backendhouse.github.io/post/boltdb%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E4%B8%89-%E4%BA%8B%E5%8A%A1%E4%B8%8E%E5%B9%B6%E5%8F%91%E6%8E%A7%E5%88%B6/</guid><description>如果说数据库是软件工程领域的皇冠，而事务与并发控制可称之为皇冠上的钻石。本节将详细分析boltdb中如何实现事务与并发控制 事务 事务定义 bol</description></item><item><title>Boltdb学习笔记之一--存储管理</title><link>https://backendhouse.github.io/post/boltdb%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E4%B8%80-%E5%AD%98%E5%82%A8%E7%AE%A1%E7%90%86/</link><pubDate>Sat, 20 Mar 2021 09:24:05 +0800</pubDate><guid>https://backendhouse.github.io/post/boltdb%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E4%B8%80-%E5%AD%98%E5%82%A8%E7%AE%A1%E7%90%86/</guid><description>更多精彩内容，请关注微信公众号：后端技术小屋 磁盘和内存的管理 磁盘是持久化存储，内存是非持久化存储。当数据库执行查询时，会以page为单位的读</description></item><item><title>Boltdb学习笔记之二--数据结构</title><link>https://backendhouse.github.io/post/boltdb%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E4%BA%8C-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</link><pubDate>Sat, 20 Mar 2021 09:24:05 +0800</pubDate><guid>https://backendhouse.github.io/post/boltdb%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E4%BA%8C-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</guid><description>在boltdb中，最核心的数据结构当属B+树了。B+树是数据库或文件系统中常见的数据结构，它的特点是能够保证数据稳定有序，因为每个叶子节点的</description></item><item><title>Boltdb学习笔记之〇--概述</title><link>https://backendhouse.github.io/post/boltdb%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B-%E6%A6%82%E8%BF%B0/</link><pubDate>Sun, 07 Mar 2021 20:28:52 +0800</pubDate><guid>https://backendhouse.github.io/post/boltdb%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B-%E6%A6%82%E8%BF%B0/</guid><description>更多精彩内容，请关注微信公众号：后端技术小屋 看了boltdb也有一阵子了，看完之后总想写点什么，因为感觉到这可能是个不小的坑，所以迟迟没有动</description></item></channel></rss>